[{"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/index.js":"1","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/Idiky.js":"2","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/store.js":"3","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Main.js":"4","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Internal.js":"5","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/Locals.js":"6","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/authReducers.js":"7","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/login/LoginScreen.js":"8","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/Admin.js":"9","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/Home.js":"10","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont2.js":"11","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/Content.js":"12","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont3.js":"13","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont1.js":"14","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/Menu.js":"15","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/TopToolBar.js":"16","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/Settings.js":"17","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/Board.js":"18","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Title.js":"19","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Alert.js":"20","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Email.js":"21","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Account.js":"22","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/MobilMenu.js":"23","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/ListCoownership.js":"24","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cards/Simple.js":"25","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/TmpImage.js":"26","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Counter.js":"27","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/LoadLocals.js":"28","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Locals.js":"29","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Coownership.js":"30","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Colors.js":"31","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/config/serverless.js":"32","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/upload.js":"33","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/cloudinary.js":"34","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/TmpImg.js":"35","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/actions/Connect.js":"36","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Brands.js":"37","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/modals.js":"38","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/brands/ListBrands.js":"39","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/brands/FormBrands.js":"40","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/categories/ListCategories.js":"41","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Categories.js":"42","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/categories/FormCategories.js":"43","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/imagentmp/ListImagenTmp.js":"44"},{"size":359,"mtime":1658761350412,"results":"45","hashOfConfig":"46"},{"size":301,"mtime":1658872317965,"results":"47","hashOfConfig":"46"},{"size":585,"mtime":1659564482607,"results":"48","hashOfConfig":"46"},{"size":1600,"mtime":1658889141820,"results":"49","hashOfConfig":"46"},{"size":638,"mtime":1659480097480,"results":"50","hashOfConfig":"46"},{"size":345,"mtime":1658764647750,"results":"51","hashOfConfig":"46"},{"size":421,"mtime":1631443687907,"results":"52","hashOfConfig":"46"},{"size":395,"mtime":1629722759602,"results":"53","hashOfConfig":"46"},{"size":1210,"mtime":1659453863494,"results":"54","hashOfConfig":"46"},{"size":2382,"mtime":1659453882584,"results":"55","hashOfConfig":"46"},{"size":1419,"mtime":1628295165576,"results":"56","hashOfConfig":"46"},{"size":1150,"mtime":1659477548422,"results":"57","hashOfConfig":"46"},{"size":623,"mtime":1628300426098,"results":"58","hashOfConfig":"46"},{"size":1064,"mtime":1628300407469,"results":"59","hashOfConfig":"46"},{"size":3983,"mtime":1659478620361,"results":"60","hashOfConfig":"46"},{"size":2833,"mtime":1659453952280,"results":"61","hashOfConfig":"46"},{"size":167,"mtime":1628647477548,"results":"62","hashOfConfig":"46"},{"size":382,"mtime":1659461990068,"results":"63","hashOfConfig":"46"},{"size":908,"mtime":1659461164102,"results":"64","hashOfConfig":"46"},{"size":456,"mtime":1628322390579,"results":"65","hashOfConfig":"46"},{"size":419,"mtime":1628322155898,"results":"66","hashOfConfig":"46"},{"size":1410,"mtime":1628344251366,"results":"67","hashOfConfig":"46"},{"size":3064,"mtime":1628343969715,"results":"68","hashOfConfig":"46"},{"size":1177,"mtime":1658949883688,"results":"69","hashOfConfig":"46"},{"size":1759,"mtime":1628550133486,"results":"70","hashOfConfig":"46"},{"size":58,"mtime":1658869325335,"results":"71","hashOfConfig":"46"},{"size":415,"mtime":1659478851903,"results":"72","hashOfConfig":"46"},{"size":533,"mtime":1659480113059,"results":"73","hashOfConfig":"46"},{"size":4759,"mtime":1659613804815,"results":"74","hashOfConfig":"46"},{"size":45011,"mtime":1628460165839,"results":"75","hashOfConfig":"46"},{"size":440,"mtime":1628551154779,"results":"76","hashOfConfig":"46"},{"size":114,"mtime":1658965132284,"results":"77","hashOfConfig":"46"},{"size":3767,"mtime":1659372229543,"results":"78","hashOfConfig":"46"},{"size":843,"mtime":1659633321824,"results":"79","hashOfConfig":"46"},{"size":374,"mtime":1658956218795,"results":"80","hashOfConfig":"46"},{"size":658,"mtime":1659465298188,"results":"81","hashOfConfig":"46"},{"size":512,"mtime":1659547100667,"results":"82","hashOfConfig":"46"},{"size":640,"mtime":1659551475862,"results":"83","hashOfConfig":"46"},{"size":8554,"mtime":1659575934589,"results":"84","hashOfConfig":"46"},{"size":9429,"mtime":1659574072027,"results":"85","hashOfConfig":"46"},{"size":5383,"mtime":1659575928718,"results":"86","hashOfConfig":"46"},{"size":608,"mtime":1659575731521,"results":"87","hashOfConfig":"46"},{"size":5604,"mtime":1659575606037,"results":"88","hashOfConfig":"46"},{"size":3575,"mtime":1659634435308,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1hxld6n",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/index.js",[],["189","190"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/Idiky.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/store.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Main.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Internal.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/Locals.js",[],["191","192"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/authReducers.js",[],["193","194"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/login/LoginScreen.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/Admin.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/Home.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont2.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/Content.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont3.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_home/Cont1.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/Menu.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/TopToolBar.js",["195","196"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Title} from './top_bar/Title';\nimport {Email} from './top_bar/Email';\nimport {Alert} from './top_bar/Alert';\nimport {Acount} from './top_bar/Account';\nimport {MobilMenu} from './top_bar/MobilMenu';\n\nexport default function TopToolBar({handleDrawerToggle, params}) {\n\n      const useStyles = makeStyles((theme) => ({\n        grow: {\n          flexGrow: 1,\n        },\n\n        menuButton: {\n          marginRight: theme.spacing(2),\n          [theme.breakpoints.up('sm')]: {\n            display: 'none',\n          },\n        },\n      \n        sectionDesktop: {\n          display: 'none',\n          [theme.breakpoints.up('md')]: {\n            display: 'flex',\n          },\n        }\n\n      }));\n\n      const classes = useStyles();\n      const [anchorEl, setAnchorEl] = React.useState(null);\n      const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n      const isMenuOpen = Boolean(anchorEl);\n      const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    \n      const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n        handleMobileMenuClose();\n      };\n    \n      const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n      };\n    \n      const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n      };\n    \n      const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n      };\n \n    return (\n        <div className={classes.grow}>\n            <Toolbar>\n                <IconButton\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Title params={params}/>\n                <div className={classes.grow} />\n                <div className={classes.sectionDesktop}>\n                    <Email/>\n                    <Alert/>\n                    <Acount handleProfileMenuOpen={handleProfileMenuOpen.bind(this)} handleMenuClose={handleMenuClose.bind(this)} isMobileMenuOpen={isMobileMenuOpen} isMenuOpen={isMenuOpen} anchorEl={anchorEl} />  \n                </div>\n                {\n                //<MobilMenu handleProfileMenuOpen={handleProfileMenuOpen.bind(this)} handleMobileMenuOpen={handleMobileMenuOpen.bind(this)} handleMobileMenuClose={handleMobileMenuClose.bind(this)} isMobileMenuOpen={isMobileMenuOpen} mobileMoreAnchorEl={mobileMoreAnchorEl} />\n            }\n            \n            </Toolbar>\n        </div>\n    );\n}","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/Settings.js",[],["197","198"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/Board.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Title.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Alert.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Email.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/Account.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/top_bar/MobilMenu.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/ListCoownership.js",[],["199","200"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cards/Simple.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/reducers/TmpImage.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Counter.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/LoadLocals.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Locals.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Coownership.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/data/Colors.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/config/serverless.js",[],["201","202"],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/upload.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/cloudinary.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/TmpImg.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/actions/Connect.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Brands.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/components/cross/modals.js",["203"],"import React from 'react';\nimport {Modal,  ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\n\nexport const Modals = ({setModal, modal, title, btons}) => {\n\n    return (\n        <Modal isOpen={modal} toggle={() => setModal(!modal)} zIndex=\"1500\" >\n            <ModalHeader toggle={() => setModal(!modal)} >\n                {title}\n            </ModalHeader>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={() => btons.callBackErase()}>{btons.label}</Button>{' '}\n            <Button color=\"secondary\" onClick={() => setModal(!modal)}>Cancelar</Button>\n            </ModalFooter>\n        </Modal>\n    )\n}","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/brands/ListBrands.js",["204"],"import React, {useEffect, useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {Button, Row, Col,  Card, CardHeader, CardBody, Table, Input } from 'reactstrap';\nimport {Connect} from \"../../../../../stores/actions/Connect\"\nimport { Image, Transformation } from 'cloudinary-react';\nimport { CloudinaryContext } from \"cloudinary-react\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { addBrands } from '../../../../../stores/states/Brands';\nimport {useSelector} from 'react-redux';\nimport { FormBrands } from './FormBrands';\nimport { Modals } from '../../../../../components/cross/modals';\nimport { changeFlag } from '../../../../../stores/states/Brands';\n\n\n/**\n * Este Modulo lista los registros de marcas de la tabla ListBrands \n */\nexport const ListBrands = () => {\n\n    //Funcion dispatch que permite disparar los reducer que estan en el store \n    const dispatch = useDispatch();\n    //Con esta línea podemos recuperar información que esta almacenada en el store\n    const stateBrands = useSelector(state => state.brands);\n\n    //rowTable, es un estado local que almacena la construcción Html de la tabla\n    const [rowTable, setRowTable] = useState(<tr></tr>);\n    //list, es un estado que nos ayuda como un switch para cambiar entre la pantalla de listado de marcas y el formulario\n    const [list, setList] = useState(true);\n    //data, este estado nos permite almacenar la información que de un row que esta siendo seleccionado o para ser editado o eliminado\n    const [data, setData] = useState({});\n    //modal, es un estado que nos permite activar o desactivar la visualización de un modal\n    const [modal, setModal] = useState(false);\n\n    //Funcion flecha que construye la visualización de una imagen\n    const imgDefault = (url) => {\n        return (<CloudinaryContext cloudName=\"idikydev\" uploadPreset=\"bobSeller\">\n                <Image publicId={url} > \n                    <Transformation width=\"50\" crop=\"scale\" /> \n                </Image>\n              </CloudinaryContext>)\n    }\n\n    //Esta funcion callback se envía en la solicitud de conección \"callBackErase\" que espera la respuesta del servidor \n    //que indica si un registro fue o no fue posible su eliminación\n    const callBackEraseDB  = (data) => {\n        dispatch(changeFlag(false));\n    }\n\n    //la función flecha callBackErase es enviada por el modulo Modal y se dispara si en este modal el usuario acepta el proceso de borrado\n    //llama al metodo connect solicitando eliminar un registro y se cierra el modal seteando un valor false\n    const callBackErase = () => {\n        setModal(false);\n        Connect('brands/delete', {id:data._id, urlIcon:data.urlIcon, urlImage:data.urlImage, source:\"brands\"}, 'POST', callBackEraseDB.bind(this) );\n    }\n\n    //esta funcion flecha callBack, es utilizada desde el \"useEffect\" por el connect cuando se solicita todos los registros a listar de la tabla brands\n    //se llama a esta funcion una vez el servidor retorna los datos a connect\n    //Aqui realizamos el seteo de los \"data\" en el Estado global Brands a travez del dispatch llamando al reducer \"addBrands\" este se encarga de setear los \n    //datos en el estado y notificar a todos los modulos que pueden usar estos datos\n    //tambien realizamo la construcción de la tabla que listara los datos recuperados a travez del connect a el servidor\n    const callBack = (data) => {\n        dispatch(addBrands(data));\n        buildTable(data);\n     }\n\n    //Funcion flecha que abstrae la construcción de la tabla utilizando un bucle \"map\" el cual nos permite construir la misma estructura de la tabla \n    //de forma repetitiva y retornar a la tabla\n    const buildTable = (data) => {\n        const table = data.map( (row)  => {\n            return (\n            <tr key={row._id}>\n                <th scope=\"row\" className=\"align-items-center\">{row._id}</th>\n                <td>\n                    {(row.state)&&<Input type=\"checkbox\"  defaultChecked={true}/>}\n                    {(!row.state)&&<Input type=\"checkbox\" defaultChecked={false}/>}\n                </td>\n                <td>{row.name}</td>\n                <td>{row.description}</td>\n                <td>{imgDefault(row.urlIcon)}</td>\n                <td>{imgDefault(row.urlImage)}</td>\n                <td>\n                    <div>\n                        <EditIcon style={{cursor:\"pointer\"}} onClick={() => {\n                            setData(row);\n                            setList(false);\n                        }}/>\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => {\n                            setData(row);\n                            setModal(true);\n                        }}/>\n                    </div>\n                </td>\n            </tr>)\n       });\n       setRowTable(table);\n    }\n    \n    //En esta funcion hook verificamos si hay datos en el estado brands para no llamar nuevamente al servidor por esta solicitud\n    //si la vandera es de valor \"false\" llamaremos nuevamente al servidor para obtener los datos actualizados\n    //importante que la badera sea cambiada en aquellos lugares donde sabemos que los datos fueron modificados, creados o eliminados \n    //esto para que se pueda nuevamente realizar una recarga de los datos en el estado global de Brands\n    useEffect(() => {\n        if(!stateBrands.flagBrands) Connect('brands/list', null, 'GET', callBack.bind(this) );\n        else buildTable(stateBrands.allBrands);\n    },[stateBrands.flagBrands]);\n\n    return (\n        <>\n            {\n                //Utilizamos list si esta es false es por que mostraremos el formulario de Brands si es true mostraremos la tabla de todos los registros de Brands\n                (list)\n                &&<Row>\n                    <Col xs=\"12\" md=\"12\">\n                    <Row>\n                        <Col xs=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader>\n                            <Row className=\"align-items-center\">\n                                <Col xs=\"10\" sm=\"10\" md=\"10\">Listado de Marcas</Col>\n                                <Col xs=\"2\" sm=\"2\" md=\"2\">\n                                <Button size=\"sm\" style={{fontSize:\"medium\"}} onClick={() => {\n                                    setData({});\n                                    setList(false);\n                                }} block className=\"float-right btn btn-success active\">\n                                    Crear\n                                </Button>\n                                </Col>\n                            </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"align-items-center\">\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>Estado</th>\n                                            <th>Nombre</th>\n                                            <th>Descripción</th>\n                                            <th>Icon</th>\n                                            <th>Imagen</th>\n                                            <th>Editar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {rowTable}\n                                    </tbody>\n                                </Table>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                        </Col>\n                    </Row>\n                    </Col>\n                </Row>\n            }\n            {\n                //Utilizamos list si esta es false es por que mostraremos el formulario de Brands si es true mostraremos la tabla de todos los registros de Brands\n                (!list)\n                &&<FormBrands setlist={setList.bind(this)} dataRow={data}/>\n            }\n        \n            {\n                //aqui llamamos el modulo Modals que nos sirve para verificar una decisión en este caso fue la de borrar algo \n            }\n            <Modals setModal={setModal.bind(this)} modal={modal} title=\"Usted quiere eliminar este registro!\" btons={{label:\"Eliminar\", callBackErase:callBackErase.bind(this)}} />\n        </>\n    )\n}","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/brands/FormBrands.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/categories/ListCategories.js",["205","206"],"import React, {useEffect, useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {Button, Row, Col,  Card, CardHeader, CardBody, Table, Input } from 'reactstrap';\nimport {Connect} from \"../../../../../stores/actions/Connect\"\nimport { Image, Transformation } from 'cloudinary-react';\nimport { CloudinaryContext } from \"cloudinary-react\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { addCategories, changeFlagCategories } from '../../../../../stores/states/Categories';\nimport {useSelector} from 'react-redux';\nimport { FormCategories } from './FormCategories';\nimport { Modals } from '../../../../../components/cross/modals';\n\n\nexport const ListCategories = () => {\n\n    const dispatch = useDispatch();\n    const stateCategories = useSelector(state => state.categories);\n\n    const [rowTable, setRowTable] = useState(<tr></tr>);\n    const [list, setList] = useState(true);\n    const [data, setData] = useState({});\n    const [modal, setModal] = useState(false);\n\n    const imgDefault = (url) => {\n        return (<CloudinaryContext cloudName=\"idikydev\" uploadPreset=\"bobSeller\">\n                <Image publicId={url} > \n                    <Transformation width=\"50\" crop=\"scale\" /> \n                </Image>\n              </CloudinaryContext>)\n    }\n\n    const callBackEraseDB  = (data) => {\n        dispatch(changeFlagCategories(false));\n    }\n\n    const callBackErase = () => {\n        setModal(false);\n        Connect('categories/delete', {id:data._id, urlIcon:data.urlIcon, urlImage:data.urlImage, source:\"categories\"}, 'POST', callBackEraseDB.bind(this) );\n    }\n\n    const callBack = (data) => {\n        dispatch(addCategories(data));\n        buildTable(data);\n     }\n\n    const buildTable = (data) => {\n        const table = data.map( (row)  => {\n            return (\n            <tr key={row._id}>\n                <th scope=\"row\" className=\"align-items-center\">{row._id}</th>\n                <td>{row.name}</td>\n                <td>{row.description}</td>\n                <td>{imgDefault(row.urlIcon)}</td>\n                <td>{imgDefault(row.urlImage)}</td>\n                <td>\n                    <div>\n                        <EditIcon style={{cursor:\"pointer\"}} onClick={() => {\n                            setData(row);\n                            setList(false);\n                        }}/>\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => {\n                            setData(row);\n                            setModal(true);\n                        }}/>\n                    </div>\n                </td>\n            </tr>)\n       });\n       setRowTable(table);\n    }\n    \n    useEffect(() => { \n        if(!stateCategories.flagCategories) Connect('categories/list', null, 'GET', callBack.bind(this) );\n        else buildTable(stateCategories.allCategories);\n    },[stateCategories.flagCategories]);\n\n    return (\n        <>\n            {\n                (list)\n                &&<Row>\n                    <Col xs=\"12\" md=\"12\">\n                    <Row>\n                        <Col xs=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader>\n                            <Row className=\"align-items-center\">\n                                <Col xs=\"10\" sm=\"10\" md=\"10\">Listado de Marcas</Col>\n                                <Col xs=\"2\" sm=\"2\" md=\"2\">\n                                <Button size=\"sm\" style={{fontSize:\"medium\"}} onClick={() => {\n                                    setData({});\n                                    setList(false);\n                                }} block className=\"float-right btn btn-success active\">\n                                    Crear\n                                </Button>\n                                </Col>\n                            </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"align-items-center\">\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>Nombre</th>\n                                            <th>Descripción</th>\n                                            <th>Icon</th>\n                                            <th>Imagen</th>\n                                            <th>Editar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {rowTable}\n                                    </tbody>\n                                </Table>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                        </Col>\n                    </Row>\n                    </Col>\n                </Row>\n            }\n            {\n                (!list)\n                &&<FormCategories setlist={setList.bind(this)} dataRow={data}/>\n            }\n\n            <Modals setModal={setModal.bind(this)} modal={modal} title=\"Usted quiere eliminar este registro!\" btons={{label:\"Eliminar\", callBackErase:callBackErase.bind(this)}} />\n        </>\n    )\n}","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/stores/states/Categories.js",[],"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/categories/FormCategories.js",["207"],"import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {Button, Row, Col,  Card, CardHeader, CardBody, FormGroup, Label } from 'reactstrap';\nimport { Upload } from \"../../../../../components/cross/upload\";\nimport { Image, Transformation } from 'cloudinary-react';\nimport { CloudinaryContext } from \"cloudinary-react\";\nimport { useForm } from 'react-hook-form';\nimport {Connect} from \"../../../../../stores/actions/Connect\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { changeFlagCategories } from '../../../../../stores/states/Categories';\n\nexport const FormCategories = ({setlist, dataRow}) => {\n\n    const dispatch = useDispatch();\n  \n    const imgDefault = (tipo) => {\n      let urlImg = 'v1659380500/default-product_vmta3h.jpg'\n      if(tipo === 'icon' && dataRow.urlIcon !== undefined) urlImg = dataRow.urlIcon;\n      if(tipo === 'img' && dataRow.urlImage !== undefined) urlImg = dataRow.urlImage;\n      \n      return {\n          url: urlImg,\n          view:(<CloudinaryContext cloudName=\"idikydev\" uploadPreset=\"bobSeller\">\n                  <Image publicId={urlImg} > \n                      <Transformation width=\"100\" crop=\"scale\" /> \n                  </Image>\n                </CloudinaryContext>)\n        }\n    }\n\n    const [imgObj, setImgObj] = useState(imgDefault('icon'));\n    const [icoObj, setIcoObj] = useState(imgDefault('img'));\n    const { register, handleSubmit, control, formState:{errors} } = useForm();\n  \n    const callBack = (data) => {\n        dispatch(changeFlagCategories(false));\n        setlist(true);\n    }\n\n    const save = (data)=> {\n        const body = {\n            id:dataRow._id,\n            name:data.name,\n            urlIcon: icoObj.url,\n            urlImage: imgObj.url,\n            description:data.description\n        };\n        \n        (!dataRow._id)? \n          Connect('categories/push', body, 'POST', callBack.bind(this)):\n          Connect('categories/update', body, 'POST', callBack.bind(this));\n    }\n\n    return (\n        <Row>\n          <Col xs=\"12\" md=\"12\">\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <Card>\n                  <CardHeader>\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"7\" sm=\"7\" md=\"7\">Editar o Crear una Categoría</Col>\n                      <Col xs=\"2\" sm=\"2\" md=\"2\">\n                        <Button size=\"sm\" style={{fontSize:\"medium\"}} onClick={() => setlist(true)} block className=\"float-right btn btn-success\">\n                          <ArrowBackIcon/> Regresar\n                        </Button>\n                      </Col>\n                      <Col xs=\"2\" sm=\"2\" md=\"2\">\n                        <Button size=\"sm\" style={{fontSize:\"medium\"}} onClick={handleSubmit(save)} block className=\"float-right btn btn-success\">\n                          Guardar\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                      <Row className=\"align-items-center\">\n                          <Col xs=\"4\" sm=\"4\" md=\"4\">\n                              <FormGroup>\n                                  <Label>Nombre Categoría <span style={{color:\"red\"}}> * </span> {\n                                      (errors.name)\n                                      && <span style={{color:\"red\"}}> Este campo es requerido </span>\n                                  }</Label>\n                                  <input {...register(\"name\", { required: true, maxLength: 40 })} defaultValue={dataRow.name} className=\"form-control\"/>\n                              </FormGroup>\n                          </Col>\n                          <Col xs=\"8\" sm=\"8\" md=\"8\">\n                              <FormGroup>\n                                  <Label>Descripción</Label>\n                                  <input type=\"text\" {...register(\"description\", { required: false, maxLength: 100 })} defaultValue={dataRow.description} className=\"form-control\" />\n                              </FormGroup>\n                          </Col>\n                      </Row>\n\n                      <Row>\n                          <Col md=\"3\">\n                              <FormGroup>\n                                  <Label>Icono de la categoría</Label>\n                                  <Row className=\"align-items-center\">\n                                      <Col md=\"4\" >{icoObj.view}</Col>\n                                      <Col><Upload bName=\"+ Cargar Icono\" source=\"categories\" setObj={setIcoObj.bind(this)} vWidth=\"100\" vCrop=\"scale\" mWidth=\"50\" mHeight=\"50\" /></Col>\n                                  </Row>\n                              </FormGroup>\n                          </Col>\n                          <Col md=\"3\">\n                              <FormGroup>\n                                  <Label>Imagen de la categoría</Label>\n                                  <Row className=\"align-items-center\">\n                                      <Col md=\"4\" >{imgObj.view}</Col>\n                                      <Col><Upload bName=\"+ Cargar Imagen\" source=\"categories\" setObj={setImgObj.bind(this)} vWidth=\"100\" vCrop=\"scale\" mWidth=\"500\" mHeight=\"500\" /></Col>\n                                  </Row>\n                              </FormGroup>\n                          </Col>\n                      </Row>\n                      <Row>\n                        \n                      </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n    )\n}","/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/layout/component_admin/content/store/imagentmp/ListImagenTmp.js",["208","209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"211","replacedBy":"215"},{"ruleId":"213","replacedBy":"216"},{"ruleId":"211","replacedBy":"217"},{"ruleId":"213","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":10,"column":9,"nodeType":"221","messageId":"222","endLine":10,"endColumn":18},{"ruleId":"219","severity":1,"message":"223","line":55,"column":13,"nodeType":"221","messageId":"222","endLine":55,"endColumn":33},{"ruleId":"211","replacedBy":"224"},{"ruleId":"213","replacedBy":"225"},{"ruleId":"211","replacedBy":"226"},{"ruleId":"213","replacedBy":"227"},{"ruleId":"211","replacedBy":"228"},{"ruleId":"213","replacedBy":"229"},{"ruleId":"219","severity":1,"message":"230","line":2,"column":30,"nodeType":"221","messageId":"222","endLine":2,"endColumn":39},{"ruleId":"231","severity":1,"message":"232","line":107,"column":7,"nodeType":"233","endLine":107,"endColumn":31,"suggestions":"234"},{"ruleId":"219","severity":1,"message":"235","line":3,"column":63,"nodeType":"221","messageId":"222","endLine":3,"endColumn":68},{"ruleId":"231","severity":1,"message":"236","line":77,"column":7,"nodeType":"233","endLine":77,"endColumn":39,"suggestions":"237"},{"ruleId":"219","severity":1,"message":"238","line":33,"column":37,"nodeType":"221","messageId":"222","endLine":33,"endColumn":44},{"ruleId":"219","severity":1,"message":"239","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"219","severity":1,"message":"240","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":13},{"ruleId":"231","severity":1,"message":"241","line":63,"column":7,"nodeType":"233","endLine":63,"endColumn":9,"suggestions":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],["243"],["244"],"no-unused-vars","'MobilMenu' is defined but never used.","Identifier","unusedVar","'handleMobileMenuOpen' is assigned a value but never used.",["243"],["244"],["243"],["244"],["243"],["244"],"'ModalBody' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buildTable', 'callBack', and 'stateBrands.allBrands'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'buildTable', 'callBack', and 'stateCategories.allCategories'. Either include them or remove the dependency array.",["246"],"'control' is assigned a value but never used.","'Button' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [buildTable, callBack, stateBrands.allBrands, stateBrands.flagBrands]",{"range":"254","text":"255"},"Update the dependencies array to be: [buildTable, callBack, stateCategories.allCategories, stateCategories.flagCategories]",{"range":"256","text":"257"},"Update the dependencies array to be: [callBack]",{"range":"258","text":"259"},[5561,5585],"[buildTable, callBack, stateBrands.allBrands, stateBrands.flagBrands]",[2940,2972],"[buildTable, callBack, stateCategories.allCategories, stateCategories.flagCategories]",[2133,2135],"[callBack]"]