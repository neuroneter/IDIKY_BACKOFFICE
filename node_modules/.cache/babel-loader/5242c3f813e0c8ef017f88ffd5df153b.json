{"ast":null,"code":"var _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY/src/routers/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Internal } from './Internal';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = props => {\n  _s();\n\n  let params = {};\n  params.props = props;\n  params.screen = useMediaQuery({\n    minWidth: 1824\n  }) ? {\n    sizeScreen: \"isBigDesktop\"\n  } : \"\";\n  params.screen = useMediaQuery({\n    minWidth: 1224\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isDesktop\"\n  } : params.screen;\n  params.screen = useMediaQuery({\n    minWidth: 992\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isSmallDesktop\"\n  } : params.screen;\n  params.screen = useMediaQuery({\n    minWidth: 768,\n    maxWidth: 991\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isTablet\"\n  } : params.screen;\n  params.screen = useMediaQuery({\n    maxWidth: 767\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isMobile\"\n  } : params.screen;\n  params.screen = useMediaQuery({\n    minWidth: 768\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isDafault\"\n  } : params.screen;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: props => /*#__PURE__*/_jsxDEV(Internal, {\n            params: params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"NRkmjmm6hTuhkEWWI1VmHXQq4yo=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY/src/routers/Main.js"],"names":["React","LoginScreen","BrowserRouter","Router","Switch","Route","Internal","useMediaQuery","Main","props","params","screen","minWidth","sizeScreen","maxWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAwD,kBAAxD;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC3B,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACAC,EAAAA,MAAM,CAACC,MAAP,GAAkBJ,aAAa,CAAC;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAf,GAAuC;AAACC,IAAAA,UAAU,EAAC;AAAZ,GAAvC,GAAmE,EAAnF;AACAH,EAAAA,MAAM,CAACC,MAAP,GAAkBJ,aAAa,CAAC;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAqCF,MAAM,CAACC,MAAP,KAAkB,EAAzD,GAA8D;AAACE,IAAAA,UAAU,EAAC;AAAZ,GAA9D,GAAuFH,MAAM,CAACC,MAA9G;AACAD,EAAAA,MAAM,CAACC,MAAP,GAAmBJ,aAAa,CAAC;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCF,MAAM,CAACC,MAAP,KAAkB,EAAxD,GAA6D;AAACE,IAAAA,UAAU,EAAC;AAAZ,GAA7D,GAA2FH,MAAM,CAACC,MAAnH;AACAD,EAAAA,MAAM,CAACC,MAAP,GAAmBJ,aAAa,CAAC;AAAEK,IAAAA,QAAQ,EAAE,GAAZ;AAAiBE,IAAAA,QAAQ,EAAE;AAA3B,GAAD,CAAb,IAAmDJ,MAAM,CAACC,MAAP,KAAkB,EAAvE,GAA4E;AAACE,IAAAA,UAAU,EAAC;AAAZ,GAA5E,GAAoGH,MAAM,CAACC,MAA5H;AACAD,EAAAA,MAAM,CAACC,MAAP,GAAmBJ,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCJ,MAAM,CAACC,MAAP,KAAkB,EAAxD,GAA6D;AAACE,IAAAA,UAAU,EAAC;AAAZ,GAA7D,GAAqFH,MAAM,CAACC,MAA7G;AACAD,EAAAA,MAAM,CAACC,MAAP,GAAmBJ,aAAa,CAAC;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCF,MAAM,CAACC,MAAP,KAAkB,EAAxD,GAA6D;AAACE,IAAAA,UAAU,EAAC;AAAZ,GAA7D,GAAsFH,MAAM,CAACC,MAA9G;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAGV;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,MAAM,EAAEQ,KAAK,iBAAI,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBM;;GAAMF,I;UAGSD,a,EACAA,a,EACCA,a,EACAA,a,EACAA,a,EACAA,a;;;KARVC,I","sourcesContent":["import React from 'react'\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport {BrowserRouter as Router,  Switch, Route  } from \"react-router-dom\";\nimport { Internal } from './Internal';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Main = (props) => {\n    let params = {}\n    params.props = props;\n    params.screen = ( useMediaQuery({ minWidth: 1824 }) )? {sizeScreen:\"isBigDesktop\"}:\"\";\n    params.screen = ( useMediaQuery({ minWidth: 1224 }) && params.screen === \"\")? {sizeScreen:\"isDesktop\"}:params.screen;\n    params.screen  = ( useMediaQuery({ minWidth: 992 }) && params.screen === \"\")? {sizeScreen:\"isSmallDesktop\"}:params.screen;\n    params.screen  = ( useMediaQuery({ minWidth: 768, maxWidth: 991 }) && params.screen === \"\")? {sizeScreen:\"isTablet\"}:params.screen;\n    params.screen  = ( useMediaQuery({ maxWidth: 767 }) && params.screen === \"\")? {sizeScreen:\"isMobile\"}:params.screen;\n    params.screen  = ( useMediaQuery({ minWidth: 768 }) && params.screen === \"\")? {sizeScreen:\"isDafault\"}:params.screen; \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/login\" component={ LoginScreen }/>\n                    <Route path=\"/\" render={props => <Internal params={params} />} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}