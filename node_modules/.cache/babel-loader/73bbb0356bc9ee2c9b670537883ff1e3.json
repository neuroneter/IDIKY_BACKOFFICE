{"ast":null,"code":"import React from'react';import{LoginScreen}from'../components/login/LoginScreen';import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{Internal}from'./Internal';import{useMediaQuery}from'react-responsive';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Main=function Main(props){var params={};params.history=props.histoy;params.sizeScreen=useMediaQuery({minWidth:1824})?{sizeScreen:\"isBigDesktop\"}:\"\";params.sizeScreen=useMediaQuery({minWidth:1224})&&params.sizeScreen===\"\"?\"isDesktop\":params.sizeScreen;params.sizeScreen=useMediaQuery({minWidth:992})&&params.sizeScreen===\"\"?\"isSmallDesktop\":params.sizeScreen;params.sizeScreen=useMediaQuery({minWidth:768,maxWidth:991})&&params.screen===\"\"?{sizeScreen:\"isTablet\"}:params.sizeScreen;params.sizeScreen=useMediaQuery({maxWidth:767})&&params.sizeScreen===\"\"?\"isMobile\":params.sizeScreen;params.sizeScreen=useMediaQuery({minWidth:768})&&params.sizeScreen===\"\"?\"isDafault\":params.sizeScreen;return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:LoginScreen}),/*#__PURE__*/_jsx(Route,{path:\"/\",render:function render(props){return/*#__PURE__*/_jsx(Internal,{params:params});}})]})})});};","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY/src/routers/Main.js"],"names":["React","LoginScreen","BrowserRouter","Router","Switch","Route","Internal","useMediaQuery","Main","props","params","history","histoy","sizeScreen","minWidth","maxWidth","screen"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAwD,kBAAxD,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,aAAT,KAA8B,kBAA9B,C,wFAEA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CAC3B,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACAA,MAAM,CAACC,OAAP,CAAiBF,KAAK,CAACG,MAAvB,CACAF,MAAM,CAACG,UAAP,CAAsBN,aAAa,CAAC,CAAEO,QAAQ,CAAE,IAAZ,CAAD,CAAf,CAAuC,CAACD,UAAU,CAAC,cAAZ,CAAvC,CAAmE,EAAvF,CACAH,MAAM,CAACG,UAAP,CAAsBN,aAAa,CAAC,CAAEO,QAAQ,CAAE,IAAZ,CAAD,CAAb,EAAqCJ,MAAM,CAACG,UAAP,GAAsB,EAA7D,CAAkE,WAAlE,CAA8EH,MAAM,CAACG,UAAzG,CACAH,MAAM,CAACG,UAAP,CAAuBN,aAAa,CAAC,CAAEO,QAAQ,CAAE,GAAZ,CAAD,CAAb,EAAoCJ,MAAM,CAACG,UAAP,GAAsB,EAA5D,CAAiE,gBAAjE,CAAkFH,MAAM,CAACG,UAA9G,CACAH,MAAM,CAACG,UAAP,CAAuBN,aAAa,CAAC,CAAEO,QAAQ,CAAE,GAAZ,CAAiBC,QAAQ,CAAE,GAA3B,CAAD,CAAb,EAAmDL,MAAM,CAACM,MAAP,GAAkB,EAAvE,CAA4E,CAACH,UAAU,CAAC,UAAZ,CAA5E,CAAoGH,MAAM,CAACG,UAAhI,CACAH,MAAM,CAACG,UAAP,CAAuBN,aAAa,CAAC,CAAEQ,QAAQ,CAAE,GAAZ,CAAD,CAAb,EAAoCL,MAAM,CAACG,UAAP,GAAsB,EAA5D,CAAiE,UAAjE,CAA4EH,MAAM,CAACG,UAAxG,CACAH,MAAM,CAACG,UAAP,CAAuBN,aAAa,CAAC,CAAEO,QAAQ,CAAE,GAAZ,CAAD,CAAb,EAAoCJ,MAAM,CAACG,UAAP,GAAsB,EAA5D,CAAiE,WAAjE,CAA6EH,MAAM,CAACG,UAAzG,CAEA,mBACI,KAAC,MAAD,wBACI,kCACI,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAGZ,WAAvC,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,MAAM,CAAE,gBAAAQ,KAAK,qBAAI,KAAC,QAAD,EAAU,MAAM,CAAEC,MAAlB,EAAJ,EAA7B,EAFJ,GADJ,EADJ,EADJ,CAUH,CApBM","sourcesContent":["import React from 'react'\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport {BrowserRouter as Router,  Switch, Route  } from \"react-router-dom\";\nimport { Internal } from './Internal';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Main = (props) => {\n    let params = {}\n    params.history = props.histoy;\n    params.sizeScreen = ( useMediaQuery({ minWidth: 1824 }) )? {sizeScreen:\"isBigDesktop\"}:\"\";\n    params.sizeScreen = ( useMediaQuery({ minWidth: 1224 }) && params.sizeScreen === \"\")? \"isDesktop\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 992 }) && params.sizeScreen === \"\")? \"isSmallDesktop\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 768, maxWidth: 991 }) && params.screen === \"\")? {sizeScreen:\"isTablet\"}:params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ maxWidth: 767 }) && params.sizeScreen === \"\")? \"isMobile\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 768 }) && params.sizeScreen === \"\")? \"isDafault\":params.sizeScreen; \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/login\" component={ LoginScreen }/>\n                    <Route path=\"/\" render={props => <Internal params={params} />} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}