{"ast":null,"code":"var _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Internal } from './Internal';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = props => {\n  _s();\n\n  let params = {};\n  params.history = props.histoy;\n  params.sizeScreen = useMediaQuery({\n    minWidth: 1824\n  }) ? {\n    sizeScreen: \"isBigDesktop\"\n  } : \"\";\n  params.sizeScreen = useMediaQuery({\n    minWidth: 1224\n  }) && params.sizeScreen === \"\" ? \"isDesktop\" : params.sizeScreen;\n  params.sizeScreen = useMediaQuery({\n    minWidth: 992\n  }) && params.sizeScreen === \"\" ? \"isSmallDesktop\" : params.sizeScreen;\n  params.sizeScreen = useMediaQuery({\n    minWidth: 768,\n    maxWidth: 991\n  }) && params.screen === \"\" ? {\n    sizeScreen: \"isTablet\"\n  } : params.sizeScreen;\n  params.sizeScreen = useMediaQuery({\n    maxWidth: 767\n  }) && params.sizeScreen === \"\" ? \"isMobile\" : params.sizeScreen;\n  params.sizeScreen = useMediaQuery({\n    minWidth: 768\n  }) && params.sizeScreen === \"\" ? \"isDafault\" : params.sizeScreen;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: props => /*#__PURE__*/_jsxDEV(Internal, {\n            params: params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"NRkmjmm6hTuhkEWWI1VmHXQq4yo=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/IDIKY_BACKOFFICE/src/routers/Main.js"],"names":["React","LoginScreen","BrowserRouter","Router","Switch","Route","Internal","useMediaQuery","Main","props","params","history","histoy","sizeScreen","minWidth","maxWidth","screen"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAwD,kBAAxD;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC3B,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,CAACC,OAAP,GAAiBF,KAAK,CAACG,MAAvB;AACAF,EAAAA,MAAM,CAACG,UAAP,GAAsBN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAf,GAAuC;AAACD,IAAAA,UAAU,EAAC;AAAZ,GAAvC,GAAmE,EAAvF;AACAH,EAAAA,MAAM,CAACG,UAAP,GAAsBN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAqCJ,MAAM,CAACG,UAAP,KAAsB,EAA7D,GAAkE,WAAlE,GAA8EH,MAAM,CAACG,UAAzG;AACAH,EAAAA,MAAM,CAACG,UAAP,GAAuBN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCJ,MAAM,CAACG,UAAP,KAAsB,EAA5D,GAAiE,gBAAjE,GAAkFH,MAAM,CAACG,UAA9G;AACAH,EAAAA,MAAM,CAACG,UAAP,GAAuBN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAD,CAAb,IAAmDL,MAAM,CAACM,MAAP,KAAkB,EAAvE,GAA4E;AAACH,IAAAA,UAAU,EAAC;AAAZ,GAA5E,GAAoGH,MAAM,CAACG,UAAhI;AACAH,EAAAA,MAAM,CAACG,UAAP,GAAuBN,aAAa,CAAC;AAAEQ,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCL,MAAM,CAACG,UAAP,KAAsB,EAA5D,GAAiE,UAAjE,GAA4EH,MAAM,CAACG,UAAxG;AACAH,EAAAA,MAAM,CAACG,UAAP,GAAuBN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb,IAAoCJ,MAAM,CAACG,UAAP,KAAsB,EAA5D,GAAiE,WAAjE,GAA6EH,MAAM,CAACG,UAAzG;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAGZ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,MAAM,EAAEQ,KAAK,iBAAI,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBM;;GAAMF,I;UAGaD,a,EACAA,a,EACCA,a,EACAA,a,EACAA,a,EACAA,a;;;KARdC,I","sourcesContent":["import React from 'react'\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport {BrowserRouter as Router,  Switch, Route  } from \"react-router-dom\";\nimport { Internal } from './Internal';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Main = (props) => {\n    let params = {}\n    params.history = props.histoy;\n    params.sizeScreen = ( useMediaQuery({ minWidth: 1824 }) )? {sizeScreen:\"isBigDesktop\"}:\"\";\n    params.sizeScreen = ( useMediaQuery({ minWidth: 1224 }) && params.sizeScreen === \"\")? \"isDesktop\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 992 }) && params.sizeScreen === \"\")? \"isSmallDesktop\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 768, maxWidth: 991 }) && params.screen === \"\")? {sizeScreen:\"isTablet\"}:params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ maxWidth: 767 }) && params.sizeScreen === \"\")? \"isMobile\":params.sizeScreen;\n    params.sizeScreen  = ( useMediaQuery({ minWidth: 768 }) && params.sizeScreen === \"\")? \"isDafault\":params.sizeScreen; \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/login\" component={ LoginScreen }/>\n                    <Route path=\"/\" render={props => <Internal params={params} />} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}